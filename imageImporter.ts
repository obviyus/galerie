import fs, { read } from "fs";
import farmhash from "farmhash";
import Sqids from "sqids";

/**
 * List all images in the src/assets/images/original directory
 */
export function listImages(): string[] {
	return fs.readdirSync("./src/assets/images/original");
}

/**
 * Generate string for each image and insert name into a list
 */
const images: string[] = [];

const sqids = new Sqids({
	minLength: 10,
	alphabet: "abcdefghijklmnopqrstuvwxyz",
});

const targetFile = "./src/assets/images/imageList.ts";
const esmImports: string[] = [];

listImages().forEach((image) => {
	if (!image.match(/\.(png|jpg|jpeg|webp)$/)) {
		return;
	}

	const fileBuffer = fs.readFileSync(`./src/assets/images/original/${image}`);

	const imageHash = farmhash.hash32(fileBuffer);
	const readableId = sqids.encode([imageHash]);

	images.push(readableId);
	esmImports.push(`import ${readableId} from "./original/${image}";`);
});

const imageList = `// This file is auto-generated by imageImporter.ts
// Do not edit this file directly
${esmImports.join("\n")}
const imageList: Record<string, ImageMetadata> = {${images.map(
	(readableId) => `\n\t${readableId}: ${readableId}`,
)}\n
};
export default imageList;
`;

fs.writeFileSync(targetFile, imageList);
