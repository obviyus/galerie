---
import { getImage } from '@astrojs/image';
import { MasonryGrid, sortedImage } from '../components/masonry';
import BaseIndex from '../layouts/BaseIndex.astro';
import fs from 'node:fs';
import ExifReader from 'exifreader';
import { parse } from 'fecha';

const images = await Astro.glob('../assets/images/original/*.{jpg,jpeg,png}');
const sortedImages: sortedImage[] = [];

function compareByDate(a: sortedImage, b: sortedImage) {
	return new Date(b.date) - new Date(a.date);
}

function insertSorted(array: any[], element: sortedImage) {
	for (
		var i = 0;
		i < array.length && compareByDate(array[i], element) < 0;
		i++
	) {}
	array.splice(i, 0, element);
}

export async function getImageSlug(filepath: string) {
	return filepath.split('/').pop().split('.').shift();
}

export async function getImageDate(image: Record<string, any>): Promise<Date> {
	let { src: filepath } = image.default;
	filepath = filepath.replace('/@astroimage/', 'src/');

	// Hack to check if file exists, if not, probably running build
	if (!fs.existsSync(filepath)) {
		filepath = filepath.replace('src/', '');
		filepath = 'dist/' + filepath;
	}

	const exifTags = (await ExifReader.load(filepath)) as Record<string, any>;
	return 'DateTimeOriginal' in exifTags
		? (parse(
				exifTags.DateTimeOriginal.description,
				'YYYY:MM:DD HH:mm:ss'
		  ) as Date)
		: fs.statSync(filepath).birthtime;
}

await Promise.all(
	images.map(async (image) => {
		const date = await getImageDate(image);

		insertSorted(sortedImages, {
			original: await getImage({ ...image.default, format: 'webp' }),
			thumbnail: await getImage({
				src: image.default.src,
				width: 640,
				aspectRatio: image.default.width / image.default.height,
				quality: 80,
				format: 'webp',
				alt: 'Gallery Image',
			}),
			date: date,
			slug: `image/${await getImageSlug(image.default.src)}`,
		});
	})
);
---

<BaseIndex
	title="Galerie d'Ayaan"
	description="Ayaan Zaidi's personal image feed. Mild obsession with aircrafts and shiny things. Mostly shot on a mobile camera."
	permalink="https://gallery.obviy.us/">
	<MasonryGrid images={sortedImages} client:load />
</BaseIndex>
